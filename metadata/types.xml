<typedefs>
  <typedef name="String"
    ponytypein="String"
    ponytypeinconv=".cstring()"
    ponytypeout="String"
    structtype="Pointer[U8]"
    structdef="Pointer[U8]"
    argtype="Pointer[U8] tag"
    decl="  var "
    rvtype="Pointer[U8]">
    <ponytypeconvout>
      <prefixs>
        <prefix>var pcstring: Pointer[U8] = </prefix>
      </prefixs>
      <suffixes>
        <suffix>let p: String iso = String.from_cstring(pcstring).clone()</suffix>
        <suffix>consume p</suffix>
      </suffixes>
    </ponytypeconvout>
  </typedef>

  <typedef name="Array[String]"
    ponytypein="Array[String]"
    ponytypeinconv=""
    ponytypeout="Pointer[Pointer[U8]]"
    structtype="Pointer[Pointer[U8]]"
    structdef="Pointer[Pointer[U8]]"
    argtype="Pointer[Pointer[U8]] tag"
    decl="  var "
    rvtype="Pointer[Pointer[U8]]"/>

<typedef name="Pointer[U64]" ponytypein="Pointer[U64] tag" ponytypeinconv="" ponytypeout="Pointer[U64]" structtype="Pointer[U64]" structdef="Pointer[U64]" argtype="Pointer[U64] tag" rvtype="Pointer[U64]" decl="  var "/>
<typedef name="I32" ponytypein="I32" ponytypeinconv="" ponytypeout="I32" structtype="I32" structdef="I32(0)" argtype="I32" rvtype="I32" decl="  var "/>
<typedef name="I64" ponytypein="I64" ponytypeinconv="" ponytypeout="I64" structtype="I64" structdef="I64(0)" argtype="I64" rvtype="I64" decl="  var "/></typedefs>

